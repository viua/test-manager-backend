apiVersion: v1
kind: Service
metadata:
  name: test-manager-backend
spec:
  type: NodePort
  selector:
    app: test-manager-backend
  ports:
    - name: http
      # port to be exposed to other containers inside a claster
      port: 8080
      # internal container/app port
      targetPort: 8080
      # By default and for convenience, the Kubernetes control plane will allocate a port from a range (default: 30000-32767)
      nodePort: 30007
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-manager-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-manager-backend
  template:
    metadata:
      labels:
        app: test-manager-backend
    spec:
      containers:
      - name: test-manager
        image: test-manager:1.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        env:
          - name: SPRING_DATASOURCE_URL
            valueFrom:
              configMapKeyRef:
                name: test-manager-configmap
                key: SPRING_DATASOURCE_URL
# # # # # #
# Traffic comes in on nodePort, forwards to port on the service which then routes to targetPort on the pod(s).
# https://stackoverflow.com/questions/49981601/difference-between-targetport-and-port-in-kubernetes-service-definition
# nodePort: The port on the node where external traffic will come in on
# port: The port of this service
# targetPort The target port on the pod(s) to forward traffic to
# # # # # #